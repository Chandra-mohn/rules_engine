# Generated from ../java-bridge/src/main/antlr4/com/rules/grammar/Rules.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,37,442,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,3,0,86,8,0,1,1,1,1,1,1,1,1,3,1,92,8,1,1,2,1,
        2,1,2,1,2,1,2,1,2,1,2,1,2,3,2,102,8,2,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,3,3,112,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,122,8,4,1,
        5,1,5,1,5,1,5,1,5,1,5,3,5,130,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,
        6,139,8,6,1,7,1,7,1,7,1,7,3,7,145,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,3,8,159,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,175,8,9,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,1,10,1,10,3,10,199,8,10,1,11,1,11,1,11,1,11,1,11,1,11,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,3,11,217,8,11,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,3,12,241,8,12,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,13,3,13,261,8,13,1,14,1,14,1,14,1,14,1,14,1,14,1,
        14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,3,14,277,8,14,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,3,15,287,8,15,1,16,1,16,1,16,3,16,292,
        8,16,1,17,1,17,1,17,1,17,3,17,298,8,17,1,18,1,18,1,19,1,19,1,19,
        1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,
        1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
        1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,342,
        8,29,1,30,3,30,345,8,30,1,30,4,30,348,8,30,11,30,12,30,349,1,30,
        1,30,4,30,354,8,30,11,30,12,30,355,3,30,358,8,30,1,30,1,30,3,30,
        362,8,30,1,30,4,30,365,8,30,11,30,12,30,366,3,30,369,8,30,1,31,1,
        31,1,31,1,31,5,31,375,8,31,10,31,12,31,378,9,31,1,31,1,31,1,31,1,
        31,1,31,5,31,385,8,31,10,31,12,31,388,9,31,1,31,3,31,391,8,31,1,
        32,1,32,5,32,395,8,32,10,32,12,32,398,9,32,1,33,4,33,401,8,33,11,
        33,12,33,402,1,33,1,33,1,34,1,34,1,34,1,34,5,34,411,8,34,10,34,12,
        34,414,9,34,1,34,1,34,1,35,1,35,1,35,1,35,5,35,422,8,35,10,35,12,
        35,425,9,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,5,36,434,8,36,10,
        36,12,36,437,9,36,1,36,1,36,1,37,1,37,1,423,0,38,1,1,3,2,5,3,7,4,
        9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
        55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,0,
        1,0,9,2,0,69,69,101,101,2,0,43,43,45,45,3,0,10,10,13,13,34,34,3,
        0,10,10,13,13,39,39,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,
        97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,1,0,48,57,481,0,1,1,
        0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
        0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
        0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
        0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
        0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,
        0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
        0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
        0,0,73,1,0,0,0,1,85,1,0,0,0,3,91,1,0,0,0,5,101,1,0,0,0,7,111,1,0,
        0,0,9,121,1,0,0,0,11,129,1,0,0,0,13,138,1,0,0,0,15,144,1,0,0,0,17,
        158,1,0,0,0,19,174,1,0,0,0,21,198,1,0,0,0,23,216,1,0,0,0,25,240,
        1,0,0,0,27,260,1,0,0,0,29,276,1,0,0,0,31,286,1,0,0,0,33,291,1,0,
        0,0,35,297,1,0,0,0,37,299,1,0,0,0,39,301,1,0,0,0,41,304,1,0,0,0,
        43,306,1,0,0,0,45,309,1,0,0,0,47,311,1,0,0,0,49,313,1,0,0,0,51,315,
        1,0,0,0,53,317,1,0,0,0,55,319,1,0,0,0,57,321,1,0,0,0,59,341,1,0,
        0,0,61,344,1,0,0,0,63,390,1,0,0,0,65,392,1,0,0,0,67,400,1,0,0,0,
        69,406,1,0,0,0,71,417,1,0,0,0,73,431,1,0,0,0,75,440,1,0,0,0,77,78,
        5,114,0,0,78,79,5,117,0,0,79,80,5,108,0,0,80,86,5,101,0,0,81,82,
        5,82,0,0,82,83,5,85,0,0,83,84,5,76,0,0,84,86,5,69,0,0,85,77,1,0,
        0,0,85,81,1,0,0,0,86,2,1,0,0,0,87,88,5,105,0,0,88,92,5,102,0,0,89,
        90,5,73,0,0,90,92,5,70,0,0,91,87,1,0,0,0,91,89,1,0,0,0,92,4,1,0,
        0,0,93,94,5,116,0,0,94,95,5,104,0,0,95,96,5,101,0,0,96,102,5,110,
        0,0,97,98,5,84,0,0,98,99,5,72,0,0,99,100,5,69,0,0,100,102,5,78,0,
        0,101,93,1,0,0,0,101,97,1,0,0,0,102,6,1,0,0,0,103,104,5,101,0,0,
        104,105,5,108,0,0,105,106,5,115,0,0,106,112,5,101,0,0,107,108,5,
        69,0,0,108,109,5,76,0,0,109,110,5,83,0,0,110,112,5,69,0,0,111,103,
        1,0,0,0,111,107,1,0,0,0,112,8,1,0,0,0,113,114,5,97,0,0,114,115,5,
        110,0,0,115,122,5,100,0,0,116,117,5,65,0,0,117,118,5,78,0,0,118,
        122,5,68,0,0,119,120,5,38,0,0,120,122,5,38,0,0,121,113,1,0,0,0,121,
        116,1,0,0,0,121,119,1,0,0,0,122,10,1,0,0,0,123,124,5,111,0,0,124,
        130,5,114,0,0,125,126,5,79,0,0,126,130,5,82,0,0,127,128,5,124,0,
        0,128,130,5,124,0,0,129,123,1,0,0,0,129,125,1,0,0,0,129,127,1,0,
        0,0,130,12,1,0,0,0,131,132,5,110,0,0,132,133,5,111,0,0,133,139,5,
        116,0,0,134,135,5,78,0,0,135,136,5,79,0,0,136,139,5,84,0,0,137,139,
        5,33,0,0,138,131,1,0,0,0,138,134,1,0,0,0,138,137,1,0,0,0,139,14,
        1,0,0,0,140,141,5,105,0,0,141,145,5,110,0,0,142,143,5,73,0,0,143,
        145,5,78,0,0,144,140,1,0,0,0,144,142,1,0,0,0,145,16,1,0,0,0,146,
        147,5,110,0,0,147,148,5,111,0,0,148,149,5,116,0,0,149,150,5,95,0,
        0,150,151,5,105,0,0,151,159,5,110,0,0,152,153,5,78,0,0,153,154,5,
        79,0,0,154,155,5,84,0,0,155,156,5,95,0,0,156,157,5,73,0,0,157,159,
        5,78,0,0,158,146,1,0,0,0,158,152,1,0,0,0,159,18,1,0,0,0,160,161,
        5,105,0,0,161,162,5,115,0,0,162,163,5,95,0,0,163,164,5,110,0,0,164,
        165,5,117,0,0,165,166,5,108,0,0,166,175,5,108,0,0,167,168,5,73,0,
        0,168,169,5,83,0,0,169,170,5,95,0,0,170,171,5,78,0,0,171,172,5,85,
        0,0,172,173,5,76,0,0,173,175,5,76,0,0,174,160,1,0,0,0,174,167,1,
        0,0,0,175,20,1,0,0,0,176,177,5,105,0,0,177,178,5,115,0,0,178,179,
        5,95,0,0,179,180,5,110,0,0,180,181,5,111,0,0,181,182,5,116,0,0,182,
        183,5,95,0,0,183,184,5,110,0,0,184,185,5,117,0,0,185,186,5,108,0,
        0,186,199,5,108,0,0,187,188,5,73,0,0,188,189,5,83,0,0,189,190,5,
        95,0,0,190,191,5,78,0,0,191,192,5,79,0,0,192,193,5,84,0,0,193,194,
        5,95,0,0,194,195,5,78,0,0,195,196,5,85,0,0,196,197,5,76,0,0,197,
        199,5,76,0,0,198,176,1,0,0,0,198,187,1,0,0,0,199,22,1,0,0,0,200,
        201,5,99,0,0,201,202,5,111,0,0,202,203,5,110,0,0,203,204,5,116,0,
        0,204,205,5,97,0,0,205,206,5,105,0,0,206,207,5,110,0,0,207,217,5,
        115,0,0,208,209,5,67,0,0,209,210,5,79,0,0,210,211,5,78,0,0,211,212,
        5,84,0,0,212,213,5,65,0,0,213,214,5,73,0,0,214,215,5,78,0,0,215,
        217,5,83,0,0,216,200,1,0,0,0,216,208,1,0,0,0,217,24,1,0,0,0,218,
        219,5,115,0,0,219,220,5,116,0,0,220,221,5,97,0,0,221,222,5,114,0,
        0,222,223,5,116,0,0,223,224,5,115,0,0,224,225,5,95,0,0,225,226,5,
        119,0,0,226,227,5,105,0,0,227,228,5,116,0,0,228,241,5,104,0,0,229,
        230,5,83,0,0,230,231,5,84,0,0,231,232,5,65,0,0,232,233,5,82,0,0,
        233,234,5,84,0,0,234,235,5,83,0,0,235,236,5,95,0,0,236,237,5,87,
        0,0,237,238,5,73,0,0,238,239,5,84,0,0,239,241,5,72,0,0,240,218,1,
        0,0,0,240,229,1,0,0,0,241,26,1,0,0,0,242,243,5,101,0,0,243,244,5,
        110,0,0,244,245,5,100,0,0,245,246,5,115,0,0,246,247,5,95,0,0,247,
        248,5,119,0,0,248,249,5,105,0,0,249,250,5,116,0,0,250,261,5,104,
        0,0,251,252,5,69,0,0,252,253,5,78,0,0,253,254,5,68,0,0,254,255,5,
        83,0,0,255,256,5,95,0,0,256,257,5,87,0,0,257,258,5,73,0,0,258,259,
        5,84,0,0,259,261,5,72,0,0,260,242,1,0,0,0,260,251,1,0,0,0,261,28,
        1,0,0,0,262,263,5,109,0,0,263,264,5,97,0,0,264,265,5,116,0,0,265,
        266,5,99,0,0,266,267,5,104,0,0,267,268,5,101,0,0,268,277,5,115,0,
        0,269,270,5,77,0,0,270,271,5,65,0,0,271,272,5,84,0,0,272,273,5,67,
        0,0,273,274,5,72,0,0,274,275,5,69,0,0,275,277,5,83,0,0,276,262,1,
        0,0,0,276,269,1,0,0,0,277,30,1,0,0,0,278,279,5,110,0,0,279,280,5,
        117,0,0,280,281,5,108,0,0,281,287,5,108,0,0,282,283,5,78,0,0,283,
        284,5,85,0,0,284,285,5,76,0,0,285,287,5,76,0,0,286,278,1,0,0,0,286,
        282,1,0,0,0,287,32,1,0,0,0,288,292,5,61,0,0,289,290,5,61,0,0,290,
        292,5,61,0,0,291,288,1,0,0,0,291,289,1,0,0,0,292,34,1,0,0,0,293,
        294,5,33,0,0,294,298,5,61,0,0,295,296,5,60,0,0,296,298,5,62,0,0,
        297,293,1,0,0,0,297,295,1,0,0,0,298,36,1,0,0,0,299,300,5,60,0,0,
        300,38,1,0,0,0,301,302,5,60,0,0,302,303,5,61,0,0,303,40,1,0,0,0,
        304,305,5,62,0,0,305,42,1,0,0,0,306,307,5,62,0,0,307,308,5,61,0,
        0,308,44,1,0,0,0,309,310,5,40,0,0,310,46,1,0,0,0,311,312,5,41,0,
        0,312,48,1,0,0,0,313,314,5,91,0,0,314,50,1,0,0,0,315,316,5,93,0,
        0,316,52,1,0,0,0,317,318,5,46,0,0,318,54,1,0,0,0,319,320,5,44,0,
        0,320,56,1,0,0,0,321,322,5,58,0,0,322,58,1,0,0,0,323,324,5,116,0,
        0,324,325,5,114,0,0,325,326,5,117,0,0,326,342,5,101,0,0,327,328,
        5,102,0,0,328,329,5,97,0,0,329,330,5,108,0,0,330,331,5,115,0,0,331,
        342,5,101,0,0,332,333,5,84,0,0,333,334,5,82,0,0,334,335,5,85,0,0,
        335,342,5,69,0,0,336,337,5,70,0,0,337,338,5,65,0,0,338,339,5,76,
        0,0,339,340,5,83,0,0,340,342,5,69,0,0,341,323,1,0,0,0,341,327,1,
        0,0,0,341,332,1,0,0,0,341,336,1,0,0,0,342,60,1,0,0,0,343,345,5,45,
        0,0,344,343,1,0,0,0,344,345,1,0,0,0,345,347,1,0,0,0,346,348,3,75,
        37,0,347,346,1,0,0,0,348,349,1,0,0,0,349,347,1,0,0,0,349,350,1,0,
        0,0,350,357,1,0,0,0,351,353,5,46,0,0,352,354,3,75,37,0,353,352,1,
        0,0,0,354,355,1,0,0,0,355,353,1,0,0,0,355,356,1,0,0,0,356,358,1,
        0,0,0,357,351,1,0,0,0,357,358,1,0,0,0,358,368,1,0,0,0,359,361,7,
        0,0,0,360,362,7,1,0,0,361,360,1,0,0,0,361,362,1,0,0,0,362,364,1,
        0,0,0,363,365,3,75,37,0,364,363,1,0,0,0,365,366,1,0,0,0,366,364,
        1,0,0,0,366,367,1,0,0,0,367,369,1,0,0,0,368,359,1,0,0,0,368,369,
        1,0,0,0,369,62,1,0,0,0,370,376,5,34,0,0,371,375,8,2,0,0,372,373,
        5,34,0,0,373,375,5,34,0,0,374,371,1,0,0,0,374,372,1,0,0,0,375,378,
        1,0,0,0,376,374,1,0,0,0,376,377,1,0,0,0,377,379,1,0,0,0,378,376,
        1,0,0,0,379,391,5,34,0,0,380,386,5,39,0,0,381,385,8,3,0,0,382,383,
        5,39,0,0,383,385,5,39,0,0,384,381,1,0,0,0,384,382,1,0,0,0,385,388,
        1,0,0,0,386,384,1,0,0,0,386,387,1,0,0,0,387,389,1,0,0,0,388,386,
        1,0,0,0,389,391,5,39,0,0,390,370,1,0,0,0,390,380,1,0,0,0,391,64,
        1,0,0,0,392,396,7,4,0,0,393,395,7,5,0,0,394,393,1,0,0,0,395,398,
        1,0,0,0,396,394,1,0,0,0,396,397,1,0,0,0,397,66,1,0,0,0,398,396,1,
        0,0,0,399,401,7,6,0,0,400,399,1,0,0,0,401,402,1,0,0,0,402,400,1,
        0,0,0,402,403,1,0,0,0,403,404,1,0,0,0,404,405,6,33,0,0,405,68,1,
        0,0,0,406,407,5,47,0,0,407,408,5,47,0,0,408,412,1,0,0,0,409,411,
        8,7,0,0,410,409,1,0,0,0,411,414,1,0,0,0,412,410,1,0,0,0,412,413,
        1,0,0,0,413,415,1,0,0,0,414,412,1,0,0,0,415,416,6,34,0,0,416,70,
        1,0,0,0,417,418,5,47,0,0,418,419,5,42,0,0,419,423,1,0,0,0,420,422,
        9,0,0,0,421,420,1,0,0,0,422,425,1,0,0,0,423,424,1,0,0,0,423,421,
        1,0,0,0,424,426,1,0,0,0,425,423,1,0,0,0,426,427,5,42,0,0,427,428,
        5,47,0,0,428,429,1,0,0,0,429,430,6,35,0,0,430,72,1,0,0,0,431,435,
        5,35,0,0,432,434,8,7,0,0,433,432,1,0,0,0,434,437,1,0,0,0,435,433,
        1,0,0,0,435,436,1,0,0,0,436,438,1,0,0,0,437,435,1,0,0,0,438,439,
        6,36,0,0,439,74,1,0,0,0,440,441,7,8,0,0,441,76,1,0,0,0,37,0,85,91,
        101,111,121,129,138,144,158,174,198,216,240,260,276,286,291,297,
        341,344,349,355,357,361,366,368,374,376,384,386,390,396,402,412,
        423,435,1,6,0,0
    ]

class RulesLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    RULE = 1
    IF = 2
    THEN = 3
    ELSE = 4
    AND = 5
    OR = 6
    NOT = 7
    IN = 8
    NOT_IN = 9
    IS_NULL = 10
    IS_NOT_NULL = 11
    CONTAINS = 12
    STARTS_WITH = 13
    ENDS_WITH = 14
    MATCHES = 15
    NULL = 16
    EQ = 17
    NE = 18
    LT = 19
    LE = 20
    GT = 21
    GE = 22
    LPAREN = 23
    RPAREN = 24
    LBRACKET = 25
    RBRACKET = 26
    DOT = 27
    COMMA = 28
    COLON = 29
    BOOLEAN = 30
    NUMBER = 31
    STRING = 32
    IDENTIFIER = 33
    WS = 34
    LINE_COMMENT = 35
    BLOCK_COMMENT = 36
    HASH_COMMENT = 37

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'<'", "'<='", "'>'", "'>='", "'('", "')'", "'['", "']'", "'.'", 
            "','", "':'" ]

    symbolicNames = [ "<INVALID>",
            "RULE", "IF", "THEN", "ELSE", "AND", "OR", "NOT", "IN", "NOT_IN", 
            "IS_NULL", "IS_NOT_NULL", "CONTAINS", "STARTS_WITH", "ENDS_WITH", 
            "MATCHES", "NULL", "EQ", "NE", "LT", "LE", "GT", "GE", "LPAREN", 
            "RPAREN", "LBRACKET", "RBRACKET", "DOT", "COMMA", "COLON", "BOOLEAN", 
            "NUMBER", "STRING", "IDENTIFIER", "WS", "LINE_COMMENT", "BLOCK_COMMENT", 
            "HASH_COMMENT" ]

    ruleNames = [ "RULE", "IF", "THEN", "ELSE", "AND", "OR", "NOT", "IN", 
                  "NOT_IN", "IS_NULL", "IS_NOT_NULL", "CONTAINS", "STARTS_WITH", 
                  "ENDS_WITH", "MATCHES", "NULL", "EQ", "NE", "LT", "LE", 
                  "GT", "GE", "LPAREN", "RPAREN", "LBRACKET", "RBRACKET", 
                  "DOT", "COMMA", "COLON", "BOOLEAN", "NUMBER", "STRING", 
                  "IDENTIFIER", "WS", "LINE_COMMENT", "BLOCK_COMMENT", "HASH_COMMENT", 
                  "DIGIT" ]

    grammarFileName = "Rules.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


